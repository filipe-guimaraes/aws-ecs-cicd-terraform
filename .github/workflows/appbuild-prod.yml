name: Deploy App on Amazon ECS

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  REPOSITORY_URI: ${{ secrets.REPOSITORY_URI }}
  CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build with Maven
      run: mvn package

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$REPOSITORY_URI:latest .
        docker tag $ECR_REGISTRY/$REPOSITORY_URI:latest $ECR_REGISTRY/$REPOSITORY_URI:$IMAGE_TAG
        docker push $ECR_REGISTRY/$REPOSITORY_URI:latest
        docker push $ECR_REGISTRY/$REPOSITORY_URI:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$REPOSITORY_URI:$IMAGE_TAG"

#    - name: Generate imagedefinitions.json
#      run: |
#        echo '[{"name":"'$CONTAINER_NAME'","imageUri":"'$REPOSITORY_URI:${{ github.sha }}'"}]' > imagedefinitions.json
#
#    - name: Upload imagedefinitions.json
#      uses: actions/upload-artifact@v2
#      with:
#        name: imagedefinitions
#        path: imagedefinitions.json
